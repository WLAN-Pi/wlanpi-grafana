#!/usr/bin/env python3
import os
import sys
import re
import json
#import plotext as plt
import time
import requests
from dotenv import load_dotenv


grafana_ip = "127.0.0.1"
load_dotenv(dotenv_path="/etc/environment")
GRAFANA_TOKEN = os.getenv('GRAFANA_TOKEN')
assert GRAFANA_TOKEN is not None
assert GRAFANA_TOKEN != ""


"""
debug - spectool_raw neturl tcp://192.168.1.228:30569
Initializing network connection...
Connected to server, waiting for device list...
Enabling network device: Wi-Spy DBx USB 2434400552 (2434400552)
Configured device 2434400552 (Wi-Spy DBx USB 2434400552)
    2400MHz-2494MHz @ 333.00KHz, 285 samples
Wi-Spy DBx USB 2434400552: -76 -92 -98 -100 -97 -99 -100 -98 -100 -99 -101 -102 -101 -102 -101 -102 -99 -98 -101 -100 -100 -101 -101 -102 -100 -102 -93 -100 -94 -93 -100 -89 -102 -101 -101 -102 -100 -102 -103 -99 -102 -99 -102 -103 -100 -102 -102 -102 -102
 -102 -101 -98 -100 -101 -88 -88 -89 -91 -93 -95 -99 -91 -96 -93 -92 -89 -73 -71 -64 -62 -65 -67 -73 -88 -93 -92 -97 -102 -102 -102 -102 -102 -101 -101 -101 -101 -101 -102 -100 -101 -102 -102 -102 -100 -103 -67 -67 -100 -102 -101 -101 -100 -101 -101 -101 -
100 -101 -101 -101 -101 -102 -100 -101 -102 -100 -101 -101 -101 -102 -101 -100 -100 -102 -100 -100 -101 -100 -101 -101 -100 -101 -100 -103 -100 -101 -101 -103 -100 -100 -101 -100 -102 -102 -101 -98 -100 -102 -99 -101 -101 -99 -99 -103 -101 -100 -102 -102 -
100 -101 -101 -102 -101 -99 -100 -99 -99 -100 -100 -102 -98 -100 -101 -100 -100 -100 -100 -101 -99 -102 -100 -102 -101 -101 -101 -100 -98 -101 -94 -100 -98 -101 -95 -97 -100 -102 -101 -99 -100 -100 -101 -101 -100 -100 -98 -100 -101 -102 -102 -100 -102 -100
 -101 -101 -100 -102 -102 -101 -102 -101 -102 -102 -101 -100 -103 -102 -97 -96 -91 -76 -69 -66 -60 -66 -68 -75 -88 -97 -95 -102 -99 -101 -101 -99 -101 -101 -101 -102 -102 -101 -102 -101 -101 -100 -100 -100 -101 -101 -101 -102 -101 -100 -100 -101 -101 -100 
-101 -99 -99 -102 -101 -101 -101 -101 -101 -100 -102 -100 -100 -101 -101 -99 -102 -100 -102 -101
Wi-Spy DBx USB 2434400552: -76 -91 -96 -98 -98 -99 -100 -64 -100 -101 -102 -101 -102 -101 -99 -102 -102 -101 -102 -101 -101 -102 -101 -101 -103 -103 -103 -101 -91 -90 -100 -89 -102 -91 -102 -96 -100 -100 -102 -102 -101 -103 -102 -102 -100 -100 -98 -98 -100
 -101 -102 -100 -101 -102 -103 -89 -102 -99 -97 -103 -102 -101 -101 -94 -96 -90 -77 -71 -67 -62 -69 -71 -77 -88 -94 -99 -100 -103 -100 -101 -74 -101 -102 -103 -103 -100 -101 -101 -101 -101 -101 -102 -100 -101 -100 -100 -100 -101 -101 -102 -102 -100 -102 -9
9 -101 -101 -102 -102 -101 -101 -101 -99 -101 -99 -100 -102 -96 -101 -100 -101 -99 -100 -100 -65 -80 -75 -102 -101 -102 -100 -100 -101 -100 -101 -100 -101 -100 -92 -100 -101 -100 -102 -101 -101 -102 -101 -103 -99 -100 -101 -101 -101 -100 -100 -99 -101 -99 
-94 -90 -89 -99 -93 -99 -99 -100 -100 -99 -100 -100 -100 -99 -100 -101 -99 -101 -102 -101 -99 -97 -95 -100 -96 -102 -89 -101 -98 -101 -100 -100 -101 -100 -102 -102 -100 -101 -101 -100 -101 -101 -100 -100 -98 -98 -100 -101 -95 -101 -102 -100 -102 -102 -99 -
101 -99 -101 -100 -100 -101 -103 -102 -101 -102 -102 -103 -101 -100 -96 -95 -79 -70 -66 -64 -68 -71 -76 -90 -99 -99 -101 -101 -102 -102 -77 -99 -100 -102 -99 -100 -102 -102 -101 -101 -100 -101 -101 -101 -100 -101 -98 -101 -101 -100 -102 -100 -103 -100 -101
 -101 -101 -101 -99 -100 -100 -101 -101 -98 -101 -101 -101 -99 -99 -101 -101 -101 -99
"""


counter = 0
freqs = []
lf = 0
hf = 0
numsamples = 0

for line in sys.stdin:
    print("=====")
    print(line)
    print("-----")
    if line is not None:
        if counter >= 4:
            data = list(map(int, line.split(':')[1].split(' ')[1:-1]))
            #print(len(data))
            #print(data)
            x = list(range(len(data)))
            y = data


            #Build JSON
            #j = {"lf": lf, "hf": hf}
            #for i in range(numsamples):
            #  j[str(freqs[i])] = data[i]
            #print(j)

            #Build Influx Line Protocol
            l = "wispy2"
            #l = l + ",lf=" + str(lf) + ",hf=" + str(hf) + " "
            l = l + " "
            l = l + str(freqs[0]) + "=" + str(data[0])
            for i in range(numsamples-1):
                l = l + "," + str(freqs[i+1]) + "=" + str(data[i+1])
            l = l + " " + str(time.time_ns())
            print(l)

            #Send to Grafana
            rq = requests.post(f"http://{grafana_ip}:3000/api/live/push/wispy", data=l, headers = {"Authorization": f"Bearer {GRAFANA_TOKEN}"})
            print(rq)


            #print(list(zip(x,y)))
            #plt.scatter(data)
            #plt.show()
        
        else:
            counter = counter +1
            if counter == 4:
                print("4")
                m = re.match(r"(\d+)MHz\-(\d+)MHz.*, (\d+) samples", line.strip())
                print(m)
                if m:
                    lf = int(m.groups()[0])
                    hf = int(m.groups()[1])
                    numsamples =  int(m.groups()[2])
                    print(lf)
                    print(hf)
                    print(numsamples)
                    for i in range(numsamples):
                        freqs.append(round(i * (hf - lf) / numsamples + lf, 4))
                    print(freqs)

