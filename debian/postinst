#!/bin/bash

#DEBHELPER#

GRAFANA_WAS_RUNNING=false

# function to check if a given path is a symlink
function isValidSymlink() {
    if [ -L "$1" ]; then
        return 0
    else
        return 1
    fi
}

# Add Grafana repository
echo "Adding Grafana repository"
wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | tee /etc/apt/sources.list.d/grafana.list

# Add InfluxData repository (influxdb, influxdb2, telegraf, chronograf)
if [ ! -f /etc/apt/sources.list.d/influxdb.list ]; then
    echo "Adding InfluxData repository"
    curl https://repos.influxdata.com/influxdata-archive.key | gpg --dearmor | sudo tee /usr/share/keyrings/influxdb-archive-keyring.gpg >/dev/null
    echo "deb [signed-by=/usr/share/keyrings/influxdb-archive-keyring.gpg] https://repos.influxdata.com/debian $(grep "VERSION_CODENAME=" /etc/os-release |awk -F= {'print $2'} | sed s/\"//g) stable" | sudo tee /etc/apt/sources.list.d/influxdb.list
fi

# Stop Grafana service if it is running
if /bin/systemctl is-active --quiet grafana-server.service; then
    GRAFANA_WAS_RUNNING=true
    echo "Stopping Grafana service ..."
    /bin/systemctl stop grafana-server.service
fi

# Backup current Grafana config file before we install ours
GRAFANA_CONF=/etc/grafana/grafana.ini
if ! isValidSymlink $GRAFANA_CONF; then
    if [ -f "$GRAFANA_CONF" ]; then
        TSTAMP=`date '+%s'`
        NEW_CONF="$GRAFANA_CONF.$TSTAMP"
        echo "Existing grafana.conf detected; backing it up and moving it to $NEW_CONF..."
        mv $GRAFANA_CONF $NEW_CONF
    fi
    echo "Linking our grafana.ini config ..."
    ln -s /etc/wlanpi-grafana/grafana.ini $GRAFANA_CONF
fi

# Install plugins
echo "Installing Grafana plugins"
grafana-cli plugins install ae3e-plotly-panel
grafana-cli plugins install innius-video-panel

# Start Grafana service and then change password, password change needs to happen only after the service has started at least once

# If Grafana service was running when this script started, start it again
if [ "$GRAFANA_WAS_RUNNING" = true ]; then
    echo "Starting grafana-server.service ..."
    /bin/systemctl start grafana-server.service
fi